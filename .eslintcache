[{"C:\\Users\\91702\\Desktop\\my-demo-app-2\\src\\index.js":"1","C:\\Users\\91702\\Desktop\\my-demo-app-2\\src\\App.js":"2"},{"size":368,"mtime":1611050213521,"results":"3","hashOfConfig":"4"},{"size":2442,"mtime":1611210424229,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"158my1t",{"filePath":"9","messages":"10","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"C:\\Users\\91702\\Desktop\\my-demo-app-2\\src\\index.js",[],["12","13"],"C:\\Users\\91702\\Desktop\\my-demo-app-2\\src\\App.js",["14"],"import React, { useState  } from 'react';\n\nfunction Todo({Values , index , RemoveListItem}){\n  return(\n    <div>\n      <div className=\"listContainer\">\n        <li>\n          {Values.data}\n          <button className=\"closeButton\" onClick={() => RemoveListItem(index)}>x</button>\n        </li>\n      </div>\n    </div>\n  );\n}\n\nfunction App(){\n  const[ListValue, setListValue] = useState([\n    {data : \"react poc\"},\n    {data : \"html poc\"},\n    {data : \"git poc\"},\n    {data : \"backend poc\"}\n  ]);\n  const AddListItem =() =>{\n    var inputvalue = document.getElementById(\"myInput\").value;\n    if(inputvalue==\"\"){\n      alert(\"write something\")\n    }else{\n      setListValue([...ListValue, {data:inputvalue}]);\n      document.getElementById(\"myInput\").value = \"\";\n    }\n  };\n  const RemoveListItem = index => {\n    const newList = [...ListValue];\n    newList.splice(index, 1);\n    setListValue(newList);\n  };\n  return(\n    <div>\n      <div className=\"container\"> \n        <div className=\"header\">\n          <h2 style={{textAlign:\"center\"}}> To Do List App </h2>\n          <input type=\"text\" placeholder=\"write something ...\" id=\"myInput\"/>\n          <button onClick={AddListItem} >Add</button>\n        </div>\n        <div>\n          {\n            ListValue.map((dataValue , dataKey) => <Todo Values={dataValue} index={dataKey} Valueskey={dataKey} RemoveListItem={RemoveListItem}/>)\n          }\n        </div>\n        \n      </div>\n      <style jsx>{`\n        \n        .container{\n          width: 300px;\n          border: 15px solid black;\n          padding: 50px;\n          margin: 20px;\n          \n        }\n        .header{\n          background-color: #f44336;\n          padding: 10px 10px;\n          color: white;\n          text-align: center;\n          }\n        li {\n          cursor: pointer;\n          position: relative;\n          padding: 12px 8px 12px 40px;\n          list-style-type: none;\n          background: #eee;\n          font-size: 18px;\n        }\n        li:nth-child(odd) {\n          background: #f9f9f9;\n        }\n        .closeButton {\n          position: absolute;\n          right: 0;\n          top: 0;\n          width:10%;\n          text-align:center;\n          padding: 12px 16px 12px 16px;\n        }\n        .closeButton:hover {\n          background-color: #f44336;\n        }\n        .listContainer{\n          margin: 0;\n  \t\t\t  padding: 0;\n        }\n      `}\n      </style>\n    </div>\n  );\n  \n}\n\nexport default App;\n\n\n\n",{"ruleId":"15","replacedBy":"16"},{"ruleId":"17","replacedBy":"18"},{"ruleId":"19","severity":1,"message":"20","line":25,"column":18,"nodeType":"21","messageId":"22","endLine":25,"endColumn":20},"no-native-reassign",["23"],"no-negated-in-lhs",["24"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]